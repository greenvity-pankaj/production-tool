C51 COMPILER V9.53.0.0   MAC_HOST_CB                                                       11/04/2015 20:09:52 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MAC_HOST_CB
OBJECT MODULE PLACED IN .\obj\mac_host_cb.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\..\..\firmware\zigbee\mac_host_cb.c LARGE OBJECTADVANCED OPTIMIZE(
                    -9,SIZE) BROWSE INTVECTOR(0X2100) INCDIR(..\..\..\..\firmware\common\datapath;..\..\..\..\firmware\common\include;..\..\.
                    -.\..\firmware\hal;..\..\..\..\firmware\hpgp\src\crypto;..\..\..\..\firmware\hpgp\src\ctrl;..\..\..\..\firmware\hpgp\src\
                    -hal;..\..\..\..\firmware\hpgp\src\link;..\..\..\..\firmware\hpgp\src\mux;..\..\..\..\firmware\hpgp\src\nma;..\..\..\..\f
                    -irmware\hpgp\src\route;..\..\..\..\firmware\hpgp\src\test;..\..\..\..\firmware\project\hal\src;..\..\..\..\firmware\zigb
                    -ee;..\..\..\..\components\aps\inc;..\..\..\..\components\utilities\datatype\inc;..\..\..\..\components\utilities\event\i
                    -nc;..\..\..\..\components\utilities\linklist\inc;..\..\..\..\components\utilities\timer\inc;..\..\..\..\components\hpgp\
                    -inc;..\..\..\..\firmware\common;..\..\..\..\firmware\hpgp;..\..\..\..\firmware\hpgp\src;..\..\..\..\firmware\app_support
                    -;..\..\..\..\firmware\HybriiB_configuration_rw\src;..\..\..\..\components\drivers\gpio\inc;..\..\..\..\components\driver
                    -s\hpgp\inc;..\..\..\..\components\drivers\nwk\inc;..\..\..\..\components\drivers\ieee802154\inc;..\..\..\..\components;.
                    -.\..\..\..\components\osal\inc;..\..\..\..\components\nma\hpgp\inc;..\..\..\..\components\nma\ieee802154\inc;..\..\..\..
                    -\components\nma;..\..\..\..\components\utilities\event\inc;..\..\..\..\components\hpgp\inc;..\..\..\..\components\driver
                    -s\flash\inc;..\..\..\..\components\ieee802154\inc;..\..\..\..\components\drivers\uart\inc;..\..\..\..\components\utiliti
                    -es;..\..\..\..\components\drivers\hpgp\inc;..\..\..\..\components\drivers\ieee802154\inc;..\..\..\..\components\drivers\
                    -nwk\inc;..\..\..\..\components\utilities\debug\inc;..\..\..\..\sampleapp\inc;..\..\..\..\sampleapp\src;..\..\inc;..\..\.
                    -.\..\components\drivers\i2c\inc;..\..\..\..\components\drivers\gvspi\inc) NOAREGS DEFINE(inline,P8051,C51,HPGP_HAL,HYBRI
                    -I_8051,HYBRII_HPGP,CCO_FUNC,STA_FUNC,HPGP_TEST,HPGP_DEBUG,RTX51_TINY_OS,HYBRII_ASIC,PLC_SW_SYNC,HPGP_MAC_SAP,NMA,NEW_SYN
                    -C,UM,HYBRII_B,Hybrii_B,HW_SPI_TX_CRC,HW_SPI_RX_CRC,B_ASICPLC,HYBRII_ASIC_A2,BB_CAL,_CRC_VERIFY_,BB_GAIN_TABLE,B2,FREQ_DE
                    -TECT,HYBRII_B_AFE,_BC_SECURE_TEST_,FREQ_DETECT,BCN_ERR,NO_HOST,MCCO,KEEP_ALIVE,UART_RAW,UART_HOST_INTF,UART_GPIO_INTERRU
                    -PT,MCCO,SW_RECOVERY,HYBRII_802154,DEBUG_DATAPATH,HPGP_DRIVER_APP,LRWPAN_DRIVER_APP,NWKSTARTUP_APP,ROUTE_APP,RTOPO_APP,RE
                    -GISTER_APP,LLP_APP,BRIDGE,DEVICEINTF_APP,SMARTLIGHT_APP,LED_SMART_LIGHT,ROUTE_RECOVERY) PRINT(.\lst\mac_host_cb.lst) TAB
                    -S(2) OBJECT(.\obj\mac_host_cb.obj)

line level    source

   1          /**
   2           * @file mac_host_cb.c
   3           *
   4           * Wrapper code for MAC callback functions.
   5           *
   6           * $Id: mac_host_cb.c,v 1.4 2014/11/26 13:19:41 ranjan Exp $
   7           *
   8           * Copyright (c) 2011, Greenvity Communication All rights reserved.
   9           *
  10           */
  11          #ifdef HYBRII_802154
  12          
  13          /* === Includes ============================================================ */
  14          #include <stdio.h>
  15          #include <string.h>
  16          #include "papdef.h"
  17          #include "list.h"
  18          #include "event.h"
  19          #include "timer.h"
  20          #if (defined UM) && (!defined ZBMAC_DIAG)
  21          #ifdef NO_HOST
  22          #include "gv701x_includes.h"
  23          #endif
  24          #endif
  25          #include "return_val.h"
  26          //#if (defined UM) && (!defined ZBMAC_DIAG)
  27          #include "nma.h"
  28          #include "nma_fw.h"
  29          //#endif
  30          #if (defined UM) && (!defined ZBMAC_DIAG)
  31          #ifdef NO_HOST
  32          #include "gv701x_osal.h"
  33          #endif
  34          #endif
C51 COMPILER V9.53.0.0   MAC_HOST_CB                                                       11/04/2015 20:09:52 PAGE 2   

  35          #include "bmm.h"
  36          #include "qmm.h"
  37          #include "mac_const.h"
  38          #include "mac_msgs.h"
  39          #include "mac_hal.h"
  40          #include "mac_api.h"
  41          #include "mac_data_structures.h"
  42          #include "mac_internal.h"
  43          #include "mac.h"
  44          #if (defined UM) && (!defined ZBMAC_DIAG) 
  45          #include "fm.h"
  46          #endif
  47          
  48          /* === Macros ============================================================== */
  49          
  50          
  51          /* === Globals ============================================================= */
  52          
  53          #if (defined UM) && (!defined ZBMAC_DIAG) 
  54          #ifdef NO_HOST
  55          mac_host_db_t mac_host_db;
  56          #endif
  57          uint8_t host_cb_buf[MAX_HOST_CMD_LENGTH];
  58          #endif
  59          
  60          /* === Externals ========================================================== */
  61          
  62          #if (defined UM) && (!defined ZBMAC_DIAG) 
  63          extern void Host_SendIndication(u8 eventId, u8 protocol, u8 *payload, u8 length);
  64          extern void *NMA_EncodeRsp(u8 command, u8 protocol, u8 *ptr_packet, u16 packetlen);
  65          extern eStatus NMA_TransmitMgmtMsg(sEvent *event);
  66          #endif
  67          
  68          /* === Prototypes ========================================================== */
  69          
  70          
  71          /* === Implementation ====================================================== */
  72          
  73          #if (defined UM) && (!defined ZBMAC_DIAG) 
  74          
  75          void mlme_send_to_host(buffer_t *buf_p)
  76          {
  77   1        uint8_t* cmd_ptr = (uint8_t*)BMM_BUFFER_POINTER(buf_p);
  78   1        sEvent* rspEvent = NULL;
  79   1        uint8_t cmd_type = 0xFF;
  80   1        uint8_t length;
  81   1        uint8_t cmd_code;
  82   1      
  83   1        cmd_code = (uint8_t)*cmd_ptr;
  84   1        
  85   1        switch(cmd_code)
  86   1        {
  87   2          case MCPS_DATA_INDICATION:
  88   2          {
  89   3            mcps_data_ind_t* WpanInd = (mcps_data_ind_t*)host_cb_buf;   
  90   3            mcps_data_ind_t *pmsg;
  91   3          
  92   3            /* Get the buffer body from buffer header */
  93   3            pmsg = (mcps_data_ind_t *)BMM_BUFFER_POINTER(buf_p);
  94   3          
  95   3      #ifdef __DEBUG__
                    {
C51 COMPILER V9.53.0.0   MAC_HOST_CB                                                       11/04/2015 20:09:52 PAGE 3   

                      uint8_t idx;
                    
                      printf("\nRX bytes = %bu, LQI = %bx\n",
                           pmsg->msduLength, pmsg->mpduLinkQuality);
                      for (idx = 0; idx < pmsg->msduLength + 2; idx++) {
                        printf("%02bx ", pmsg->msdu_p[idx]);
                      }
                      printf("\n");
                    }
              #endif
 107   3      #ifdef _VERIFY_PAYLOAD_
                    {
              #ifdef ZBMAC_DIAG
                      extern uint8_t test_tx_data[];
                    
                      uint16_t idx;
                    
                      if (FALSE == hal_pib_PromiscuousMode) {
                        for (idx = 0; idx < pmsg->msduLength; idx++) {
                          if (pmsg->msdu_p[idx] != test_tx_data[idx]) {
                            printf("\n[%d]%02bx - Expected %02bx\n",
                                 idx, pmsg->msdu_p[idx],
                                 test_tx_data[idx]);
                          }
                        }
                      }
              #endif  
                    }
              #endif    
 126   3            memcpy((uint8_t*)WpanInd, (uint8_t*)pmsg, sizeof(mcps_data_ind_t) - sizeof(pmsg->msdu_p));
 127   3            memcpy(((uint8_t*)(WpanInd + 1) - sizeof(pmsg->msdu_p)), (uint8_t*)pmsg->msdu_p, pmsg->msduLength);
 128   3            length = sizeof(mcps_data_ind_t) - sizeof(pmsg->msdu_p) + pmsg->msduLength;
 129   3            cmd_type = EVENT_FRM_ID;
 130   3            cmd_ptr = (uint8_t*)host_cb_buf;
 131   3          }
 132   2          break;
 133   2      
 134   2          case MLME_BEACON_NOTIFY_INDICATION:
 135   2          {       
 136   3            uint8_t lAddressListLen;
 137   3            mlme_beacon_notify_ind_t* BeaconInd = (mlme_beacon_notify_ind_t*)host_cb_buf; 
 138   3              mlme_beacon_notify_ind_t *pmsg;
 139   3      
 140   3            /* Get the buffer body from buffer header */
 141   3            pmsg = (mlme_beacon_notify_ind_t *)BMM_BUFFER_POINTER(buf_p);
 142   3            memcpy((uint8_t*)BeaconInd, (uint8_t*)pmsg, sizeof(mlme_beacon_notify_ind_t));                        
 143   3            lAddressListLen = NUM_SHORT_PEND_ADDR(pmsg->PendAddrSpec) + 
 144   3                    NUM_LONG_PEND_ADDR(pmsg->PendAddrSpec);
 145   3            lAddressListLen = MIN(7/*BEACON_MAX_PEND_ADDR_CNT*/, lAddressListLen);
 146   3            BeaconInd->AddrList = (uint8_t*)(BeaconInd + 1);
 147   3            memcpy(BeaconInd->AddrList, pmsg->AddrList, lAddressListLen);
 148   3            BeaconInd->sdu = (uint8_t *)(BeaconInd->AddrList + lAddressListLen);
 149   3            memcpy((BeaconInd->AddrList + lAddressListLen), pmsg->sdu, pmsg->sduLength);
 150   3            
 151   3            cmd_type = EVENT_FRM_ID;      
 152   3            length = (sizeof(mlme_beacon_notify_ind_t) 
 153   3                    + lAddressListLen + pmsg->sduLength);
 154   3            cmd_ptr = (uint8_t*)host_cb_buf;
 155   3          }
 156   2          break;
 157   2      
 158   2          case MLME_SYNC_LOSS_INDICATION:
C51 COMPILER V9.53.0.0   MAC_HOST_CB                                                       11/04/2015 20:09:52 PAGE 4   

 159   2            cmd_type = EVENT_FRM_ID;            
 160   2            length = sizeof(mlme_sync_loss_ind_t);
 161   2          break;
 162   2          case MLME_ORPHAN_INDICATION:
 163   2            cmd_type = EVENT_FRM_ID;            
 164   2            length = sizeof(mlme_orphan_ind_t);
 165   2          break;      
 166   2          case MLME_DISASSOCIATE_INDICATION:
 167   2            cmd_type = EVENT_FRM_ID;            
 168   2            length = sizeof(mlme_disassociate_ind_t);
 169   2          break;      
 170   2          case MLME_COMM_STATUS_INDICATION:
 171   2            cmd_type = EVENT_FRM_ID;            
 172   2            length = sizeof(mlme_comm_status_ind_t);
 173   2          break;            
 174   2          case MLME_ASSOCIATE_INDICATION:     
 175   2            cmd_type = EVENT_FRM_ID;      
 176   2            length = sizeof(mlme_associate_ind_t);
 177   2          break;    
 178   2          case MLME_GET_CONFIRM:
 179   2            cmd_type = MGMT_FRM_ID;
 180   2            length = sizeof(mlme_get_conf_t);
 181   2          break;
 182   2      
 183   2          case MCPS_DATA_CONFIRM:
 184   2            cmd_type = MGMT_FRM_ID;
 185   2            length = sizeof(mcps_data_conf_t);
 186   2          break;      
 187   2          case MCPS_PURGE_CONFIRM:
 188   2            cmd_type = MGMT_FRM_ID;
 189   2            length = sizeof(mcps_purge_conf_t);
 190   2          break;      
 191   2          case MLME_ASSOCIATE_CONFIRM:
 192   2            cmd_type = MGMT_FRM_ID;
 193   2            length = sizeof(mlme_associate_conf_t);
 194   2          break;      
 195   2          case MLME_DISASSOCIATE_CONFIRM:
 196   2            cmd_type = MGMT_FRM_ID;
 197   2            length = sizeof(mlme_disassociate_conf_t);
 198   2          break;      
 199   2          case MLME_POLL_CONFIRM:
 200   2            cmd_type = MGMT_FRM_ID;
 201   2            length = sizeof(mlme_poll_conf_t);
 202   2          break;      
 203   2          case MLME_RESET_CONFIRM:
 204   2            cmd_type = MGMT_FRM_ID;
 205   2            length = sizeof(mlme_reset_conf_t);
 206   2          break;      
 207   2          case MLME_RX_ENABLE_CONFIRM:
 208   2            cmd_type = MGMT_FRM_ID;
 209   2            length = sizeof(mlme_rx_enable_conf_t);
 210   2          break;      
 211   2          case MLME_SCAN_CONFIRM:
 212   2          {
 213   3            mlme_scan_conf_t* scan_cnf = (mlme_scan_conf_t*)BMM_BUFFER_POINTER(buf_p);
 214   3            cmd_type = MGMT_FRM_ID;     
 215   3            /*Note: is Scan cnf buffer is more than 255 byte upgrade length type to uint16_t*/      
 216   3            length = (sizeof(mlme_scan_conf_t) + 
 217   3                (scan_cnf->ResultListSize - 1)*(sizeof(scan_result_list_t)));
 218   3          }
 219   2          break;      
 220   2          case MLME_SET_CONFIRM:
C51 COMPILER V9.53.0.0   MAC_HOST_CB                                                       11/04/2015 20:09:52 PAGE 5   

 221   2            cmd_type = MGMT_FRM_ID;
 222   2            length = sizeof(mlme_set_conf_t);
 223   2          break;
 224   2          case MLME_START_CONFIRM:
 225   2            cmd_type = MGMT_FRM_ID;
 226   2            length = sizeof(mlme_start_conf_t);     
 227   2          break;    
 228   2          
 229   2          default:
 230   2          break;
 231   2        }
 232   1      
 233   1        FM_Printf(FM_APP, "\nrfcr %bu", cmd_code);
 234   1        if(cmd_type == EVENT_FRM_ID)
 235   1        {
 236   2          Host_SendIndication(cmd_code, IEEE802_15_4_MAC_ID,
 237   2              (uint8_t *)cmd_ptr, length);  
 238   2        }
 239   1        else if(cmd_type == MGMT_FRM_ID)
 240   1        {       
 241   2          rspEvent = NMA_EncodeRsp(cmd_code, IEEE802_15_4_MAC_ID, (uint8_t*)cmd_ptr, length);
 242   2            
 243   2            if (rspEvent != NULL)
 244   2            {
 245   3            /* transmit a confirmation message */
 246   3            NMA_TransmitMgmtMsg(rspEvent);
 247   3          }   
 248   2        }
 249   1      
 250   1        if(cmd_code != MLME_SYNC_LOSS_INDICATION)
 251   1        {
 252   2          /* Free the buffer */
 253   2          bmm_buffer_free(buf_p);
 254   2        }
 255   1      }
 256          
 257          #else
              /**
               *
               * This function is a callback for mcps data indication
               *
               * buf_p - Pointer to message structure
               */
              void mcps_data_ind (buffer_t *buf_p)
              {
                  mcps_data_ind_t *pmsg;
              
                  /* Get the buffer body from buffer header */
                  pmsg = (mcps_data_ind_t *)BMM_BUFFER_POINTER(buf_p);
              
              #ifdef __DEBUG__
                {
                  uint8_t idx;
                
                  printf("\nRX bytes = %bu, LQI = %bx\n",
                       pmsg->msduLength, pmsg->mpduLinkQuality);
                  for (idx = 0; idx < pmsg->msduLength + 2; idx++) {
                    printf("%02bx ", pmsg->msdu_p[idx]);
                  }
                  printf("\n");
                }
              #endif
C51 COMPILER V9.53.0.0   MAC_HOST_CB                                                       11/04/2015 20:09:52 PAGE 6   

              #ifdef _VERIFY_PAYLOAD_
              {
              #ifdef ZBMAC_DIAG
                  extern uint8_t test_tx_data[];
              
                  uint16_t idx;
              
                  if (FALSE == hal_pib_PromiscuousMode) {
                      for (idx = 0; idx < pmsg->msduLength; idx++) {
                          if (pmsg->msdu_p[idx] != test_tx_data[idx]) {
                              printf("\n[%d]%02bx - Expected %02bx\n",
                                     idx, pmsg->msdu_p[idx],
                                     test_tx_data[idx]);
                          }
                      }
                  }
              #endif  
              }
              #endif
                
                  /* Free the buffer */
                  bmm_buffer_free(buf_p);
              }
              
              /**
               *
               * This function is a callback for mcps data confirm.
               *
               * buf_p - Pointer to message structure
               */
              void mcps_data_conf (buffer_t *buf_p)
              {
                  mcps_data_conf_t *pmsg;
                sEvent *rspEvent = NULL;
              
                  /* Get the buffer body from buffer header */
                  pmsg = (mcps_data_conf_t *)BMM_BUFFER_POINTER(buf_p);
              
                  /* Free the buffer */
                  bmm_buffer_free(buf_p);
              }
              
              /**
               *
               * This function is a callback for mcps purge confirm.
               *
               * buf_p - Pointer to message structure
               */
              void mcps_purge_conf (buffer_t *buf_p)
              {
                  mcps_purge_conf_t *pmsg;
                sEvent *rspEvent = NULL;
              
                  /* Get the buffer body from buffer header */
                  pmsg = (mcps_purge_conf_t *)BMM_BUFFER_POINTER(buf_p);
              
                  /* Free the buffer */
                  bmm_buffer_free(buf_p);
              }
              
              /**
               *
C51 COMPILER V9.53.0.0   MAC_HOST_CB                                                       11/04/2015 20:09:52 PAGE 7   

               * This function is a callback for mlme associate confirm.
               *
               * buf_p - Pointer to message structure
               */
              void mlme_associate_conf (buffer_t *buf_p)
              {
                  mlme_associate_conf_t *pmsg;
                sEvent *rspEvent = NULL;
              
                  /* Get the buffer body from buffer header */
                  pmsg = (mlme_associate_conf_t *)BMM_BUFFER_POINTER(buf_p); 
              
                  /* Free the buffer */
                  bmm_buffer_free(buf_p);
              }
              
              /**
               *
               * This function is a callback for mlme associate indication.
               *
               * buf_p - Pointer to message structure
               */
              void mlme_associate_ind (buffer_t *buf_p)
              {
                  mlme_associate_ind_t *pmsg;
              
                  /* Get the buffer body from buffer header */
                  pmsg = (mlme_associate_ind_t *)BMM_BUFFER_POINTER(buf_p); 
              
                  /* Free the buffer */
                  bmm_buffer_free(buf_p);
              }
              
              /**
               *
               * This function is a callback for mlme beacon notify indication.
               *
               * buf_p - Pointer to message structure
               */
              void mlme_beacon_notify_ind (buffer_t *buf_p)
              {
                  mlme_beacon_notify_ind_t *pmsg;
              
                  /* Get the buffer body from buffer header */
                  pmsg = (mlme_beacon_notify_ind_t *)BMM_BUFFER_POINTER(buf_p);
              
                  /* Free the buffer */
                  bmm_buffer_free(buf_p);
              }
              
              /**
               *
               * This function is a callback for mlme comm status indication.
               *
               * buf_p - Pointer to message structure
               */
              void mlme_comm_status_ind (buffer_t *buf_p)
              {
                  mlme_comm_status_ind_t *pmsg;
              
                  /* Get the buffer body from buffer header */
                  pmsg = (mlme_comm_status_ind_t *)BMM_BUFFER_POINTER(buf_p);
C51 COMPILER V9.53.0.0   MAC_HOST_CB                                                       11/04/2015 20:09:52 PAGE 8   

              
                  /* Free the buffer */
                  bmm_buffer_free(buf_p);
              }
              
              /**
               *
               * This function is a callback for mlme disassociate confirm.
               *
               * buf_p - Pointer to message structure
               */
              void mlme_disassociate_conf (buffer_t *buf_p)
              { 
                  mlme_disassociate_conf_t *pmsg;
                sEvent *rspEvent = NULL;
                
                  /* Get the buffer body from buffer header */
                  pmsg = (mlme_disassociate_conf_t *)BMM_BUFFER_POINTER(buf_p);
              
                  /* Free the buffer */
                  bmm_buffer_free(buf_p);
              }
              
              /**
               *
               * This function is a callback for mlme disassociate indication.
               *
               * buf_p - Pointer to message structure
               */
              void mlme_disassociate_ind (buffer_t *buf_p)
              {
                  mlme_disassociate_ind_t *pmsg;
              
                  /* Get the buffer body from buffer header */
                  pmsg = (mlme_disassociate_ind_t *)BMM_BUFFER_POINTER(buf_p);
              
                  /* Free the buffer */
                  bmm_buffer_free(buf_p);
              }
              
              /**
               *
               * This function is a callback for mlme get confirm.
               *
               * buf_p - Pointer to message structure
               */
              void mlme_get_conf (buffer_t *buf_p)
              {
                //u8 attrlen;//kiran commented
                  mlme_get_conf_t *pmsg;
                sEvent *rspEvent = NULL;
              
                  /* Get the buffer body from buffer header */
                  pmsg = (mlme_get_conf_t *)BMM_BUFFER_POINTER(buf_p);
              
                  /* Free the buffer */
                  bmm_buffer_free(buf_p);
              }
              
              /**
               *
               * This function is a callback for mlme orphan indication.
C51 COMPILER V9.53.0.0   MAC_HOST_CB                                                       11/04/2015 20:09:52 PAGE 9   

               *
               * buf_p - Pointer to message structure
               */
              void mlme_orphan_ind (buffer_t *buf_p)
              {
                  mlme_orphan_ind_t *pmsg;
              
                  /* Get the buffer body from buffer header */
                  pmsg = (mlme_orphan_ind_t *)BMM_BUFFER_POINTER(buf_p);
              
                  /* Free the buffer */
                  bmm_buffer_free(buf_p);
              }
              
              /**
               *
               * This function is a callback for mlme poll confirm.
               *
               * buf_p - Pointer to message structure
               */
              void mlme_poll_conf (buffer_t *buf_p)
              {
                  mlme_poll_conf_t *pmsg;
                sEvent *rspEvent = NULL;
              
                  /* Get the buffer body from buffer header */
                  pmsg = (mlme_poll_conf_t *)BMM_BUFFER_POINTER(buf_p);
              
                  /* Free the buffer */
                  bmm_buffer_free(buf_p);
              }
              
              /**
               *
               * This function is a callback for mlme reset confirm.
               *
               * buf_p - Pointer to message structure
               */
              void mlme_reset_conf (buffer_t *buf_p)
              {
                  mlme_reset_conf_t *pmsg;
                sEvent *rspEvent = NULL;
              
                  /* Get the buffer body from buffer header */
                  pmsg = (mlme_reset_conf_t *)BMM_BUFFER_POINTER(buf_p);
              
                  /* Free the buffer */
                  bmm_buffer_free(buf_p);
              }
              
              /**
               *
               * This function is a callback for mlme rx enable confirm.
               *
               * buf_p - Pointer to message structure
               */
              void mlme_rx_enable_conf (buffer_t *buf_p)
              {
                  mlme_rx_enable_conf_t *pmsg;
                sEvent *rspEvent = NULL;
              
                  /* Get the buffer body from buffer header */
C51 COMPILER V9.53.0.0   MAC_HOST_CB                                                       11/04/2015 20:09:52 PAGE 10  

                  pmsg = (mlme_rx_enable_conf_t *)BMM_BUFFER_POINTER(buf_p);
              
                  /* Free the buffer */
                  bmm_buffer_free(buf_p);
              }
              
              /**
               *
               * This function is a callback for mlme scan confirm.
               *
               * buf_p - Pointer to message structure
               */
              void mlme_scan_conf (buffer_t *buf_p)
              {
                  mlme_scan_conf_t *pmsg;
                sEvent* rspEvent = NULL;
                
                  /* Get the buffer body from buffer header */
                  pmsg = (mlme_scan_conf_t *)BMM_BUFFER_POINTER(buf_p);
              
                  /* Free the buffer */
                  bmm_buffer_free(buf_p);
              }
              
              /**
               *
               * This function is a callback for mlme set confirm.
               *
               * buf_p - Pointer to message structure
               */
              void mlme_set_conf (buffer_t *buf_p)
              {
                  mlme_set_conf_t *pmsg;
                sEvent* rspEvent = NULL;
              
                  /* Get the buffer body from buffer header */
                  pmsg = (mlme_set_conf_t *)BMM_BUFFER_POINTER(buf_p);
                
                  /* Free the buffer */
                  bmm_buffer_free(buf_p);
              }
              
              /**
               *
               * This function is a callback for mlme start confirm.
               *
               * buf_p - Pointer to message structure
               */
              void mlme_start_conf (buffer_t *buf_p)
              {
                  mlme_start_conf_t *pmsg;
                sEvent* rspEvent = NULL;
              
                  /* Get the buffer body from buffer header */
                  pmsg = (mlme_start_conf_t *)BMM_BUFFER_POINTER(buf_p);
              
                  /* Free the buffer */
                  bmm_buffer_free(buf_p);
              }
              
              /**
               *
C51 COMPILER V9.53.0.0   MAC_HOST_CB                                                       11/04/2015 20:09:52 PAGE 11  

               * This function is a callback for mlme sync loss indication.
               *
               * buf_p - Pointer to message structure
               */
              void mlme_sync_loss_ind (buffer_t *buf_p)
              {
                  mlme_sync_loss_ind_t *pmsg;
              
                  /* Get the buffer body from buffer header */
                  pmsg = (mlme_sync_loss_ind_t *)BMM_BUFFER_POINTER(buf_p);
              
                  /* Uses static buffer for sync loss indication and it is not freed */
              }
              #endif 
 607          #endif /*HYBRII_802154*/
 608          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    948    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =    274      19
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
