C51 COMPILER V9.03   MAIN                                                                  07/11/2013 00:02:24 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE MAIN
NO OBJECT MODULE REQUESTED
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\src\main.c BROWSE INCDIR(..\src;C:\Keil\C51\INC;..\src) DEBUG OBJECTEXTE
                    -ND PRINT(.\main.lst) SRC(.\main.SRC)

line level    source

   1          /*
   2          * Description : 8051 bootloader main function
   3          *
   4          * Copyright (c) 2010-2011 Greenvity Communications, Inc.
   5          * All rights reserved.
   6          *
   7          * Author      : Peter Nguyen
   8          * Release Date: 04/27/2013
   9          * Purpose :
  10          *     function main of bootloader project
  11          *
  12          * File: bootld_80251.c
  13          */
  14          
  15          //#include <stdafx.h>
  16          #include <reg51.h>                  /* Include 251SB header file */     
  17          
  18          #include <stdio.h>
  19          #include <stdarg.h>
  20          #include <string.h>
  21          
  22          typedef unsigned char U8, u8;
  23          typedef unsigned long U32, u32;
  24          typedef unsigned int  U16, u16;
  25          typedef unsigned short int ui8, UI8;
  26          
  27          void help_menu();
  28          
  29          #include "uart.h"
  30          #include "sys_config_data_utils.h"
  31          
  32          void main(void)
  33          {
  34   1              u32 idata Temp;
  35   1              char idata c;
  36   1              u8 xdata configData[512];
  37   1      //      BANKSEL = 0;
  38   1      
  39   1              ComInit();
  40   1      
  41   1              EA = 0;
  42   1              c = 0;
  43   1              Temp = 0;
  44   1              printf("\n*********************************************");
  45   1              printf("\n**     GREENVITY COMMUNICATIONS INC        **");
  46   1              printf("\n**          Boot loader V2.0               **"); 
  47   1              printf("\n*********************************************\n\n");
  48   1              
  49   1              help_menu();
  50   1      
  51   1              while(1)
  52   1              {
  53   2                      switch(c)
  54   2                      {
C51 COMPILER V9.03   MAIN                                                                  07/11/2013 00:02:24 PAGE 2   

  55   3                      case ('c'):
  56   3                      case ('C'):
  57   3                              Program_Config_Data();
  58   3                              c = '1';
  59   3                              break;
  60   3                      case ('g'):
  61   3                      case ('G'):
  62   3                              Load_Config_Data(1, (u8 xdata *)&configData[0]);
  63   3                              c = '1';
  64   3                              break;
  65   3                      case ('l'):
  66   3                      case ('L'):
  67   3                              Load_Config_Data(0, (u8 xdata *)&configData[0]);
  68   3                              c = '1';
  69   3                              break;
  70   3                      case ('h'):
  71   3                      case ('H'):
  72   3                              help_menu();
  73   3                              c = '1';
  74   3                              break;
  75   3                      default:
  76   3                              if (RI==1){
  77   4                                      c = SBUF;
  78   4                                      RI = 0;
  79   4                              }
  80   3                              break;
  81   3                      }
  82   2              }
  83   1      }
  84          //================================================================
  85          
  86          void help_menu()
  87          {
  88   1          printf("\n\n Enter option for programming configuration data\n");
  89   1              printf("\n C/c: Program configuration data");
  90   1              printf("\n G/g: Load configuration data into ERAM");
  91   1              printf("\n L/l: Dump configuration data onto the terminal");
  92   1              printf("\n H/h: Help menu\n\n  ?");
  93   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    182    ----
   CONSTANT SIZE    =    388    ----
   XDATA SIZE       =   ----     512
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----       5
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
