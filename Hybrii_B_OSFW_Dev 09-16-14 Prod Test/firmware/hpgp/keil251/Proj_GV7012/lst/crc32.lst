C51 COMPILER V9.52.0.0   CRC32                                                             12/02/2014 14:35:43 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE CRC32
OBJECT MODULE PLACED IN .\obj\crc32.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\..\src\crypto\crc32.c LARGE OMF2 OPTIMIZE(9,SIZE) BROWSE INTVECTOR(0X210
                    -0) INCDIR(..\..\..\common\datapath;..\..\..\common\include;..\..\..\hal;..\..\src\crypto;..\..\src\ctrl;..\..\src\hal;..
                    -\..\src\link;..\..\src\mux;..\..\src\nma;..\..\src\route;..\..\src\sap;..\..\src\test;..\..\..\project\hal\src;..\..\..\
                    -zigbee;..\..\..\..\components\aps\inc;..\..\..\..\components\utilities\datatype\inc;..\..\..\..\components\utilities\eve
                    -nt\inc;..\..\..\..\components\utilities\linklist\inc;..\..\..\..\components\utilities\timer\inc;..\..\..\..\sampleapp\sr
                    -c;..\..\..\..\sampleapp\inc;..\..\..\common;..\..\..\hpgp;..\..\src;..\..\..\..\components\hpgp\inc;..\..\..\app_support
                    -;..\..\..\HybriiB_configuration_rw\src) NOAREGS DEFINE(inline,P8051,C51,HPGP_HAL,HYBRII_8051,HYBRII_HPGP,CCO_FUNC,STA_FU
                    -NC,HPGP_TEST,HPGP_DEBUG,RTX51_TINY_OS,HYBRII_ASIC,PLC_SW_SYNC,HYBRII_ETH,HPGP_MAC_SAP,NMA,HYBRII_SPI,NEW_SYNC,UM,HYBRII_
                    -B,Hybrii_B,HW_SPI_TX_CRC,HW_SPI_RX_CRC,AUTH_AES,PLC_TEST,B_ASICPLC,UART_HOST_INTF_,UART_RAW,MPER_,FREQ_DETECT,SW_RECOVER
                    -Y,PROD_TEST) DEBUG PRINT(.\lst\crc32.lst) TABS(2) OBJECT(.\obj\crc32.obj)

line level    source

   1          #include "papdef.h"
   2          
   3          /* crc_tab[] -- this crcTable is being build by chksum_crc32GenTab().
   4           *              so make sure, you call it before using the other
   5           *              functions!
   6           */
   7          static uint32_t crc_tab[256];
   8          
   9          /* chksum_crc() -- to a given block, this one calculates the
  10           *                              crc32-checksum until the length is
  11           *                              reached. the crc32-checksum will be
  12           *                              the result.
  13           */
  14          uint32_t chksum_crc32 (unsigned char *block, unsigned int length)
  15          {
  16   1         register unsigned long crc;
  17   1         unsigned long i;
  18   1      
  19   1         crc = 0xFFFFFFFF;
  20   1         for (i = 0; i < length; i++)
  21   1         {
  22   2            crc = ((crc >> 8) & 0x00FFFFFF) ^ crc_tab[(crc ^ *block++) & 0xFF];
  23   2         }
  24   1         return (crc ^ 0xFFFFFFFF);
  25   1      }
  26          
  27          /* chksum_crc32gentab() --      to a global crc_tab[256], this one will
  28           *                              calculate the crcTable for crc32-checksums.
  29           *                              it is generated to the polynom [..]
  30           */
  31          
  32          void chksum_crc32gentab ()
  33          {
  34   1         unsigned long crc, poly;
  35   1         int i, j;
  36   1      
  37   1         poly = 0xEDB88320L;
  38   1         for (i = 0; i < 256; i++)
  39   1         {
  40   2            crc = i;
  41   2            for (j = 8; j > 0; j--)
  42   2            {
  43   3               if (crc & 1)
  44   3               {
  45   4                  crc = (crc >> 1) ^ poly;
  46   4               }
C51 COMPILER V9.52.0.0   CRC32                                                             12/02/2014 14:35:43 PAGE 2   

  47   3               else
  48   3               {
  49   4                  crc >>= 1;
  50   4               }
  51   3            }
  52   2            crc_tab[i] = crc;
  53   2         }
  54   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    380    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   1024      25
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
