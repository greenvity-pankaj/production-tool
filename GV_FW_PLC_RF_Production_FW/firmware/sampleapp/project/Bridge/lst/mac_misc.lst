C51 COMPILER V9.53.0.0   MAC_MISC                                                          11/04/2015 20:09:52 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MAC_MISC
OBJECT MODULE PLACED IN .\obj\mac_misc.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\..\..\firmware\zigbee\mac_misc.c LARGE OBJECTADVANCED OPTIMIZE(9,S
                    -IZE) BROWSE INTVECTOR(0X2100) INCDIR(..\..\..\..\firmware\common\datapath;..\..\..\..\firmware\common\include;..\..\..\.
                    -.\firmware\hal;..\..\..\..\firmware\hpgp\src\crypto;..\..\..\..\firmware\hpgp\src\ctrl;..\..\..\..\firmware\hpgp\src\hal
                    -;..\..\..\..\firmware\hpgp\src\link;..\..\..\..\firmware\hpgp\src\mux;..\..\..\..\firmware\hpgp\src\nma;..\..\..\..\firm
                    -ware\hpgp\src\route;..\..\..\..\firmware\hpgp\src\test;..\..\..\..\firmware\project\hal\src;..\..\..\..\firmware\zigbee;
                    -..\..\..\..\components\aps\inc;..\..\..\..\components\utilities\datatype\inc;..\..\..\..\components\utilities\event\inc;
                    -..\..\..\..\components\utilities\linklist\inc;..\..\..\..\components\utilities\timer\inc;..\..\..\..\components\hpgp\inc
                    -;..\..\..\..\firmware\common;..\..\..\..\firmware\hpgp;..\..\..\..\firmware\hpgp\src;..\..\..\..\firmware\app_support;..
                    -\..\..\..\firmware\HybriiB_configuration_rw\src;..\..\..\..\components\drivers\gpio\inc;..\..\..\..\components\drivers\h
                    -pgp\inc;..\..\..\..\components\drivers\nwk\inc;..\..\..\..\components\drivers\ieee802154\inc;..\..\..\..\components;..\.
                    -.\..\..\components\osal\inc;..\..\..\..\components\nma\hpgp\inc;..\..\..\..\components\nma\ieee802154\inc;..\..\..\..\co
                    -mponents\nma;..\..\..\..\components\utilities\event\inc;..\..\..\..\components\hpgp\inc;..\..\..\..\components\drivers\f
                    -lash\inc;..\..\..\..\components\ieee802154\inc;..\..\..\..\components\drivers\uart\inc;..\..\..\..\components\utilities;
                    -..\..\..\..\components\drivers\hpgp\inc;..\..\..\..\components\drivers\ieee802154\inc;..\..\..\..\components\drivers\nwk
                    -\inc;..\..\..\..\components\utilities\debug\inc;..\..\..\..\sampleapp\inc;..\..\..\..\sampleapp\src;..\..\inc;..\..\..\.
                    -.\components\drivers\i2c\inc;..\..\..\..\components\drivers\gvspi\inc) NOAREGS DEFINE(inline,P8051,C51,HPGP_HAL,HYBRII_8
                    -051,HYBRII_HPGP,CCO_FUNC,STA_FUNC,HPGP_TEST,HPGP_DEBUG,RTX51_TINY_OS,HYBRII_ASIC,PLC_SW_SYNC,HPGP_MAC_SAP,NMA,NEW_SYNC,U
                    -M,HYBRII_B,Hybrii_B,HW_SPI_TX_CRC,HW_SPI_RX_CRC,B_ASICPLC,HYBRII_ASIC_A2,BB_CAL,_CRC_VERIFY_,BB_GAIN_TABLE,B2,FREQ_DETEC
                    -T,HYBRII_B_AFE,_BC_SECURE_TEST_,FREQ_DETECT,BCN_ERR,NO_HOST,MCCO,KEEP_ALIVE,UART_RAW,UART_HOST_INTF,UART_GPIO_INTERRUPT,
                    -MCCO,SW_RECOVERY,HYBRII_802154,DEBUG_DATAPATH,HPGP_DRIVER_APP,LRWPAN_DRIVER_APP,NWKSTARTUP_APP,ROUTE_APP,RTOPO_APP,REGIS
                    -TER_APP,LLP_APP,BRIDGE,DEVICEINTF_APP,SMARTLIGHT_APP,LED_SMART_LIGHT,ROUTE_RECOVERY) PRINT(.\lst\mac_misc.lst) TABS(2) O
                    -BJECT(.\obj\mac_misc.obj)

line level    source

   1          /**
   2           * @file
   3           *
   4           * Implement MLME-RESET, MLME-RX-ENABLE
   5           *
   6           * $Id: mac_misc.c,v 1.6 2014/11/26 13:19:41 ranjan Exp $
   7           *
   8           * Copyright (c) 2012, Greenvity Communication All rights reserved.
   9           *
  10           */
  11          #ifdef HYBRII_802154
  12          
  13          /* === Includes ============================================================ */
  14          
  15          #include <string.h>
  16          #include <stdio.h>
  17          #include "papdef.h"
  18          #include "timer.h"
  19          #include "return_val.h"
  20          #include "bmm.h"
  21          #include "qmm.h"
  22          #include "mac_msgs.h"
  23          #include "mac_hal.h"
  24          #include "mac_const.h"
  25          #include "mac_api.h"
  26          #include "mac_data_structures.h"
  27          #include "mac_internal.h"
  28          #include "mac.h"
  29          #include "utils_fw.h"
  30          #include "timer.h"
  31          #include "list.h"
  32          #include "stm.h"
  33          /* === Macros =============================================================== */
  34          
C51 COMPILER V9.53.0.0   MAC_MISC                                                          11/04/2015 20:09:52 PAGE 2   

  35          
  36          /* === Globals ============================================================= */
  37          
  38          /* === Prototypes ========================================================== */
  39          
  40          /* === Implementation ====================================================== */
  41          
  42          /*
  43           * Creates and send Communication Status Indication message to the upper layer
  44           *
  45           * status  - Status of the last operation
  46           * buf_ptr - Buffer for Communication Status Indication to the NHLE
  47           */
  48          void mac_mlme_comm_status (uint8_t status, buffer_t *buf_ptr)
  49          {
  50   1          uint64_t destination_address;
  51   1          /*
  52   1           * The pointer to the destination address (received as one of the function
  53   1           * paramters) points to a location in buf_ptr.
  54   1           * As the same buffer is used to generate the comm status
  55   1           * indication, it is typecasted to the 'mlme_comm_status_ind_t'. This may
  56   1           * result in loosing destination address (which is still a part of this
  57   1           * buffer), hence the destination address is backed up in a stack variable.
  58   1           */
  59   1          mlme_comm_status_ind_t *csi_p;
  60   1          frame_info_t *frame_ptr = (frame_info_t *)BMM_BUFFER_POINTER(buf_ptr);
  61   1      
  62   1          memcpy(&destination_address, &frame_ptr->mpdu_p[PL_POS_DST_ADDR_START],
  63   1                 sizeof(uint64_t));
  64   1      
  65   1          csi_p = (mlme_comm_status_ind_t*)BMM_BUFFER_POINTER(buf_ptr);
  66   1      
  67   1          csi_p->cmdcode = MLME_COMM_STATUS_INDICATION;
  68   1      
  69   1          csi_p->PANId = hal_pib_PANId;
  70   1      
  71   1          csi_p->SrcAddrMode = FCF_LONG_ADDR;
  72   1      
  73   1          /* Initialize the source address */
  74   1          csi_p->SrcAddr = hal_pib_IeeeAddress;
  75   1      
  76   1          csi_p->DstAddrMode = FCF_LONG_ADDR;
  77   1      
  78   1          /* Initialize the destination address */
  79   1          csi_p->DstAddr = destination_address;
  80   1      
  81   1          csi_p->status = status;
  82   1      
  83   1      #if (defined UM) && (!defined ZBMAC_DIAG)
  84   1        mlme_send_to_host(buf_ptr);
  85   1      #else
                mlme_comm_status_ind(buf_ptr);
              #endif                      
  88   1      }
  89          
  90          /*
  91           * @brief Sends mlme reset confirm
  92           *
  93           * @param m Buffer for reset confirm
  94           * @param status Status of MAC reset operation
  95           */
  96          static void mac_misc_send_reset_conf (buffer_t *buf_ptr, uint8_t status)
C51 COMPILER V9.53.0.0   MAC_MISC                                                          11/04/2015 20:09:52 PAGE 3   

  97          {
  98   1          mlme_reset_conf_t *mrc = (mlme_reset_conf_t *)BMM_BUFFER_POINTER(buf_ptr);  
  99   1      
 100   1          mrc->status = status;
 101   1          mrc->cmdcode = MLME_RESET_CONFIRM;
 102   1      
 103   1          /* Append the mlme reset confirm to the MAC-NHLE queue */
 104   1      #if (defined UM) && (!defined ZBMAC_DIAG)
 105   1        mlme_send_to_host(buf_ptr);
 106   1      #else
                mlme_reset_conf(buf_ptr);
              #endif  
 109   1      }
 110          
 111          /*
 112           *
 113           * The MLME-RESET.request primitive allows the next higher layer to request
 114           * that the MLME performs a reset operation.
 115           *
 116           * @param m Pointer to the MLME_RESET.request given by the NHLE
 117           */
 118          void mlme_reset_request (buffer_t *buf_ptr)
 119          {
 120   1          mlme_reset_req_t *mrr = (mlme_reset_req_t *)BMM_BUFFER_POINTER(buf_ptr);
 121   1          retval_t         status;
 122   1      
 123   1          /* Wakeup the radio */
 124   1          mac_trx_wakeup();
 125   1      
 126   1          /* Start MAC reset functionality */
 127   1          //status = mac_reset(mrr->SetDefaultPIB); 
 128   1        status = MAC_SUCCESS;
 129   1        
 130   1          /* Set radio to sleep if allowed */
 131   1          mac_trx_sleep();
 132   1      
 133   1          /*
 134   1           * As this is a mlme_reset request, all the requests, data (whether direct
 135   1           * or indirect), incoming frames are removed from the queues
 136   1           */
 137   1          mac_misc_send_reset_conf(buf_ptr, status);
 138   1        
 139   1          mac_q_flush();
 140   1      }
 141          
 142          #endif //HYBRII_802154
 143          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    285    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      25
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.53.0.0   MAC_MISC                                                          11/04/2015 20:09:52 PAGE 4   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
