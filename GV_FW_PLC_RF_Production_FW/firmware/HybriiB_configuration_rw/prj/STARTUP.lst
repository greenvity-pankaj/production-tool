A51 MACRO ASSEMBLER  STARTUP                                                              07/10/2013 23:53:53 PAGE     1


MACRO ASSEMBLER A51 V8.02
OBJECT MODULE PLACED IN .\STARTUP.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\A51.EXE ..\src\STARTUP.A51 SET(SMALL) DEBUG PRINT(.\STARTUP.lst) OBJECT(.\STARTUP.
                      obj) EP

LOC  OBJ            LINE     SOURCE

                       1     $nomod51 
                       2     ;------------------------------------------------------------------------------
                       3     ;  This file is part of the C51 Compiler package
                       4     ;  Copyright (c) 1988-2005 Keil Elektronik GmbH and Keil Software, Inc.
                       5     ;  Version 8.01
                       6     ;
                       7     ;  *** <<< Use Configuration Wizard in Context Menu >>> ***
                       8     ;------------------------------------------------------------------------------
                       9     ;  STARTUP.A51:  This code is executed after processor reset.
                      10     ;
                      11     ;  To translate this file use A51 with the following invocation:
                      12     ;
                      13     ;     A51 STARTUP.A51
                      14     ;
                      15     ;  To link the modified STARTUP.OBJ file to your application use the following
                      16     ;  Lx51 invocation:
                      17     ;
                      18     ;     Lx51 your object file list, STARTUP.OBJ  controls
                      19     ;
                      20     ;------------------------------------------------------------------------------
                      21     ;
                      22     ;  User-defined <h> Power-On Initialization of Memory
                      23     ;
                      24     ;  With the following EQU statements the initialization of memory
                      25     ;  at processor reset can be defined:
                      26     ;
                      27     ; <o> IDATALEN: IDATA memory size <0x0-0x100>
                      28     ;     <i> Note: The absolute start-address of IDATA memory is always 0
                      29     ;     <i>       The IDATA space overlaps physically the DATA and BIT areas.
  0100                30     IDATALEN        EQU     100h  
                      31     ;
                      32     ; <o> XDATASTART: XDATA memory start address <0x0-0xFFFF> 
                      33     ;     <i> The absolute start address of XDATA memory
  0000                34     XDATASTART      EQU     0     
                      35     ;
                      36     ; <o> XDATALEN: XDATA memory size <0x0-0xFFFF> 
                      37     ;     <i> The length of XDATA memory in bytes.
  0000                38     XDATALEN        EQU     0      
                      39     ;
                      40     ; <o> PDATASTART: PDATA memory start address <0x0-0xFFFF> 
                      41     ;     <i> The absolute start address of PDATA memory
  0000                42     PDATASTART      EQU     0H
                      43     ;
                      44     ; <o> PDATALEN: PDATA memory size <0x0-0xFF> 
                      45     ;     <i> The length of PDATA memory in bytes.
  00FF                46     PDATALEN        EQU     0FFh  
                      47     ;
                      48     ;</h>
                      49     ;------------------------------------------------------------------------------
                      50     ;
                      51     ;<h> Reentrant Stack Initialization
                      52     ;
                      53     ;  The following EQU statements define the stack pointer for reentrant
                      54     ;  functions and initialized it:
                      55     ;
                      56     ; <h> Stack Space for reentrant functions in the SMALL model.
                      57     ;  <q> IBPSTACK: Enable SMALL model reentrant stack
A51 MACRO ASSEMBLER  STARTUP                                                              07/10/2013 23:53:53 PAGE     2

                      58     ;     <i> Stack space for reentrant functions in the SMALL model.
  0000                59     IBPSTACK        EQU     0       ; set to 1 if small reentrant is used.
                      60     ;  <o> IBPSTACKTOP: End address of SMALL model stack <0x0-0xFF>
                      61     ;     <i> Set the top of the stack to the highest location.
  0100                62     IBPSTACKTOP     EQU     0xFF +1     ; default 0FFH+1  
                      63     ; </h>
                      64     ;
                      65     ; <h> Stack Space for reentrant functions in the LARGE model.      
                      66     ;  <q> XBPSTACK: Enable LARGE model reentrant stack
                      67     ;     <i> Stack space for reentrant functions in the LARGE model.
  0000                68     XBPSTACK        EQU     0       ; set to 1 if large reentrant is used.
                      69     ;  <o> XBPSTACKTOP: End address of LARGE model stack <0x0-0xFFFF>
                      70     ;     <i> Set the top of the stack to the highest location.
  0000                71     XBPSTACKTOP     EQU     0xFFFF +1   ; default 0FFFFH+1 
                      72     ; </h>
                      73     ;
                      74     ; <h> Stack Space for reentrant functions in the COMPACT model.    
                      75     ;  <q> PBPSTACK: Enable COMPACT model reentrant stack
                      76     ;     <i> Stack space for reentrant functions in the COMPACT model.
  0000                77     PBPSTACK        EQU     0       ; set to 1 if compact reentrant is used.
                      78     ;
                      79     ;   <o> PBPSTACKTOP: End address of COMPACT model stack <0x0-0xFFFF>
                      80     ;     <i> Set the top of the stack to the highest location.
  0100                81     PBPSTACKTOP     EQU     0xFF +1     ; default 0FFH+1  
                      82     ; </h>
                      83     ;</h>
                      84     ;------------------------------------------------------------------------------
                      85     ;
                      86     ;  Memory Page for Using the Compact Model with 64 KByte xdata RAM
                      87     ;  <e>Compact Model Page Definition
                      88     ;
                      89     ;  <i>Define the XDATA page used for PDATA variables. 
                      90     ;  <i>PPAGE must conform with the PPAGE set in the linker invocation.
                      91     ;
                      92     ; Enable pdata memory page initalization
  0000                93     PPAGEENABLE     EQU     0       ; set to 1 if pdata object are used.
                      94     ;
                      95     ; <o> PPAGE number <0x0-0xFF> 
                      96     ; <i> uppermost 256-byte address of the page used for PDATA variables.
  0000                97     PPAGE           EQU     0
                      98     ;
                      99     ; <o> SFR address which supplies uppermost address byte <0x0-0xFF> 
                     100     ; <i> most 8051 variants use P2 as uppermost address byte
  00A0               101     PPAGE_SFR       DATA    0A0H
                     102     ;
                     103     ; </e>
                     104     ;------------------------------------------------------------------------------
                     105     
  2100               106     CRAM_START EQU  0x2100
                     107     
                     108     ; Standard SFR Symbols 
  00E0               109     ACC     DATA    0E0H
  00F0               110     B       DATA    0F0H
  0081               111     SP      DATA    81H
  0082               112     DPL     DATA    82H
  0083               113     DPH     DATA    83H
                     114     
                     115                     NAME    ?C_STARTUP
                     116     
                     117     
                     118     ?C_C51STARTUP   SEGMENT   CODE
                     119     
                     120     
                     121     
                     122     
                     123     
A51 MACRO ASSEMBLER  STARTUP                                                              07/10/2013 23:53:53 PAGE     3

                     124     
                     125     
----                 126     XSEG                    AT              2100H
2100                 127     xvar:                   DS              20d
                     128     
----                 129     ISEG                    AT              2ch 
002C                 130     ?STACK:         DS      30d
                     131     
                     132     
                     133                     EXTRN CODE (?C_START)
                     134                     PUBLIC  ?C_STARTUP
                     135     
----                 136                     CSEG    AT      2100h    ;If no MON51, this address is 0
                     137     
                     138     
2100 020000   F      139     ?C_STARTUP:     LJMP    STARTUP1
                     140     
                     141     
2103 022103          142                     LJMP    CRAM_START + 0x3; //2403H ;ext 0 - 0
2106 00              143                     NOP
2107 00              144                     NOP
2108 00              145                     NOP
2109 00              146                     NOP
210A 00              147                     NOP
210B 02210B          148                     LJMP    CRAM_START + 0xB; //240BH ;timer 0 - 1
210E 00              149                     NOP
210F 00              150                     NOP
2110 00              151                     NOP
2111 00              152                     NOP
2112 00              153                     NOP
2113 022113          154                     LJMP    CRAM_START + 0x13; //2413H ;ext 1 - 2
2116 00              155                     NOP
2117 00              156                     NOP
2118 00              157                     NOP
2119 00              158                     NOP
211A 00              159                     NOP
211B 02211B          160                     LJMP    CRAM_START + 0x1B; //241BH ;timer 1     - 3
211E 00              161                                     NOP
211F 00              162                     NOP
2120 00              163                     NOP
2121 00              164                     NOP
2122 00              165                     NOP
2123 022123          166                     LJMP    CRAM_START + 0x23; //2423H ;serial comport - 4
2126 00              167                     NOP
2127 00              168                     NOP
2128 00              169                     NOP
2129 00              170                     NOP
212A 00              171                     NOP
212B 02212B          172                     LJMP    CRAM_START + 0x2B; //242BH ;INT_ADR_OFF + 2BH
212E 00              173                     NOP
212F 00              174                     NOP
2130 00              175                     NOP
2131 00              176                     NOP
2132 00              177                     NOP
2133 022133          178                     LJMP    CRAM_START + 0x33; //2433H ;INT_ADR_OFF + 33H
                     179     
----                 180                     RSEG    ?C_C51STARTUP
                     181     
0000                 182     STARTUP1:
                     183     
                     184     IF IDATALEN <> 0
0000 78FF            185                     MOV     R0,#IDATALEN - 1
0002 E4              186                     CLR     A
0003 F6              187     IDATALOOP:      MOV     @R0,A
0004 D8FD            188                     DJNZ    R0,IDATALOOP
                     189     ENDIF
A51 MACRO ASSEMBLER  STARTUP                                                              07/10/2013 23:53:53 PAGE     4

                     190     
                     191     IF XDATALEN <> 0
                                             MOV     DPTR,#XDATASTART
                                             MOV     R7,#LOW (XDATALEN)
                               IF (LOW (XDATALEN)) <> 0
                                             MOV     R6,#(HIGH (XDATALEN)) +1
                               ELSE
                                             MOV     R6,#HIGH (XDATALEN)
                               ENDIF
                                             CLR     A
                             XDATALOOP:      MOVX    @DPTR,A
                                             INC     DPTR
                                             DJNZ    R7,XDATALOOP
                                             DJNZ    R6,XDATALOOP
                             ENDIF
                     205     
                     206     IF PPAGEENABLE <> 0
                                             MOV     PPAGE_SFR,#PPAGE
                             ENDIF
                     209     
                     210     IF PDATALEN <> 0
0006 7800            211                     MOV     R0,#LOW (PDATASTART)
0008 7FFF            212                     MOV     R7,#LOW (PDATALEN)
000A E4              213                     CLR     A
000B F2              214     PDATALOOP:      MOVX    @R0,A
000C 08              215                     INC     R0
000D DFFC            216                     DJNZ    R7,PDATALOOP
                     217     ENDIF
                     218     
                     219     IF IBPSTACK <> 0
                             EXTRN DATA (?C_IBP)
                             
                                             MOV     ?C_IBP,#LOW IBPSTACKTOP
                             ENDIF
                     224     
                     225     IF XBPSTACK <> 0
                             EXTRN DATA (?C_XBP)
                             
                                             MOV     ?C_XBP,#HIGH XBPSTACKTOP
                                             MOV     ?C_XBP+1,#LOW XBPSTACKTOP
                             ENDIF
                     231     
                     232     IF PBPSTACK <> 0
                             EXTRN DATA (?C_PBP)
                                             MOV     ?C_PBP,#LOW PBPSTACKTOP
                             ENDIF
                     236     
000F 75812B          237                     MOV     SP,#?STACK-1
                     238     
                     239     ; This code is required if you use L51_BANK.A51 with Banking Mode 4
                     240     ;<h> Code Banking
                     241     ; <q> Select Bank 0 for L51_BANK.A51 Mode 4
                     242     
                             
                             
                                             
                             
                     247     ;</h>
0012 020000   F      248                     LJMP    ?C_START
                     249     
                     250                     END
A51 MACRO ASSEMBLER  STARTUP                                                              07/10/2013 23:53:53 PAGE     5

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

?C_C51STARTUP. . .  C SEG    0015H       REL=UNIT
?C_START . . . . .  C ADDR   -----       EXT
?C_STARTUP . . . .  C ADDR   2100H   A   
?STACK . . . . . .  I ADDR   002CH   A   
ACC. . . . . . . .  D ADDR   00E0H   A   
B. . . . . . . . .  D ADDR   00F0H   A   
CRAM_START . . . .  N NUMB   2100H   A   
DPH. . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . .  D ADDR   0082H   A   
IBPSTACK . . . . .  N NUMB   0000H   A   
IBPSTACKTOP. . . .  N NUMB   0100H   A   
IDATALEN . . . . .  N NUMB   0100H   A   
IDATALOOP. . . . .  C ADDR   0003H   R   SEG=?C_C51STARTUP
PBPSTACK . . . . .  N NUMB   0000H   A   
PBPSTACKTOP. . . .  N NUMB   0100H   A   
PDATALEN . . . . .  N NUMB   00FFH   A   
PDATALOOP. . . . .  C ADDR   000BH   R   SEG=?C_C51STARTUP
PDATASTART . . . .  N NUMB   0000H   A   
PPAGE. . . . . . .  N NUMB   0000H   A   
PPAGEENABLE. . . .  N NUMB   0000H   A   
PPAGE_SFR. . . . .  D ADDR   00A0H   A   
SP . . . . . . . .  D ADDR   0081H   A   
STARTUP1 . . . . .  C ADDR   0000H   R   SEG=?C_C51STARTUP
XBPSTACK . . . . .  N NUMB   0000H   A   
XBPSTACKTOP. . . .  N NUMB   0000H   A   
XDATALEN . . . . .  N NUMB   0000H   A   
XDATASTART . . . .  N NUMB   0000H   A   
XVAR . . . . . . .  X ADDR   2100H   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
