C51 COMPILER V9.52.0.0   IHAL_UI                                                           01/10/2015 21:25:26 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE IHAL_UI
OBJECT MODULE PLACED IN .\obj\ihal_ui.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE src\ihal_ui.c LARGE OPTIMIZE(9,SIZE) BROWSE INTVECTOR(0X2100) INCDIR(..\..\
                    -common;..\..\project\hal\src;..\..\hpgp\src\mux;..\..\hpgp\src\link;..\..\hpgp\src\ctrl;..\..\hpgp\src\nma;..\..\hal;.\s
                    -rc;..\..\hpgp\src\hal;..\..\hpgp\src\sap;..\..\hpgp\src\test;..\..\hpgp\src\;..\..\common\datapath;..\..\hpgp\src\route;
                    -..\..\..\components\utilities\datatype\inc;..\..\..\components\utilities\event\inc;..\..\..\components\utilities\linklis
                    -t\inc;..\..\..\components\utilities\timer\inc;..\..\app_support;..\..\..\sampleapp\src;..\..\..\sampleapp\inc;..\..\..\c
                    -omponents\hpgp\inc;..\..\..\components\aps\inc) DEFINE(P8051,HYBRII_8051,HYBRII_HPGP,HYBRII_ASIC,PLC_SW_SYNC=1,inline,HP
                    -GP_HAL_TEST,RTX51_TINY_OS,_TIMER_INTERRUPT_,SNIFFER,Hybrii_B,NEW_SYNC,_TIMER_INTERRUPT_,HYBRII_B,HW_SPI_TX_CRC,HW_SPI_RX
                    -_CRC,_CRC_VERIFY_,HYBRII_SPI,SNIFFER,HYBRII_ETH,B_ASICPLC,FREQ_DETECT,PROD_TEST) DEBUG OBJECTEXTEND PRINT(.\lst\ihal_ui.
                    -lst) TABS(2) OBJECT(.\obj\ihal_ui.obj)

line level    source

   1          /*
   2          * $Id: ihal_ui.c,v 1.1 2013/12/18 17:06:22 yiming Exp $
   3          *
   4          * $Source: /home/cvsrepo/Hybrii_B_OSFW_Dev/firmware/project/hal/src/ihal_ui.c,v $
   5          *
   6          * Description : SPI UI Test module.
   7          *
   8          * Copyright (c) 2012 Greenvity Communications, Inc.
   9          * All rights reserved.
  10          *
  11          * Purpose :
  12          *     Provice UI for SPI test
  13          *
  14          *
  15          */
  16          
  17          #include <stdio.h>
  18          #include <string.h>
  19          #include "hal_common.h"
  20          #include "hal_spi.h"
  21          #include "ihal_tst.h"
  22          
  23          #ifdef SPI_DEBUG
              u8 mySpiDebugFlag=0;
              extern u8  spi_tx_flag;
              extern hal_spi_stats_t hal_spi_stats;
              #endif
  28          
  29          int getline(char *s, int lim);
  30          
  31          void ihal_ui_tx_menu()
  32          {      
  33   1        u16   frm_len;
  34   1          u16   inc_bytes;
  35   1          u16   max_tx_bytes;
  36   1        u16   num_frames;
  37   1        char  input[10];
  38   1      
  39   1        do {
  40   2          printf("Enter FrameLen  : 0-IncLen, 1 to 1536-Fixed Len        :: ");
  41   2          while (getline(input, sizeof(input)) > 0) {
  42   3                  if (sscanf(input,"%d",&frm_len) >= 1) {
  43   4                      break;
  44   4                  }
  45   3              }
  46   2        } while (frm_len < 1 && frm_len > 1536);
  47   1      
C51 COMPILER V9.52.0.0   IHAL_UI                                                           01/10/2015 21:25:26 PAGE 2   

  48   1          printf("Enter number of frames: 0-ContinuousMode, N-NumOfFrames :: ");
  49   1          while (getline(input, sizeof(input)) > 0) {
  50   2              if (sscanf(input,"%d",&num_frames) >= 1) {
  51   3                  break;
  52   3              }
  53   2        }
  54   1          
  55   1          if (frm_len == 0) {
  56   2              inc_bytes = 1;
  57   2              max_tx_bytes = 1536;
  58   2          } else {
  59   2              inc_bytes = 0;
  60   2              max_tx_bytes = frm_len;
  61   2          }
  62   1          
  63   1          ihal_tst_slave_tx_dma(max_tx_bytes, inc_bytes, num_frames);
  64   1      }
  65          
  66          void ihal_ui_rx_menu()
  67          {
  68   1          u16   num_frames;
  69   1          char  input[10];
  70   1      
  71   1          printf("Enter number of frames: 0-ContinuousMode, N-NumOfFrames :: ");
  72   1          while (getline(input, sizeof(input)) > 0) {
  73   2              if (sscanf(input,"%d",&num_frames) >= 1) {
  74   3                  break;
  75   3              }
  76   2        }
  77   1          ihal_tst_rx(0, num_frames);
  78   1      }
  79          
  80          #ifdef SPI_DEBUG
              void ihal_ui_stat_menu()
              {
                hal_spi_stats_show ();
                printf(" - spi_tx_flag = %bu\n", spi_tx_flag);
              
                printf(" - hal_spi_stats's error stats\n");
                printf("  - rx_master_tx = %u\n", hal_spi_stats.rx_master_tx);
                printf("  - invalid_cp_cnt = %u\n", hal_spi_stats.invalid_cp_cnt);
                printf("  - status_busy = %u\n", hal_spi_stats.status_busy);
                printf("  - payload_rx_pending = %u\n", hal_spi_stats.payload_rx_pending);
                printf("  - pre_tx_timeout = %u\n", hal_spi_stats.pre_tx_timeout);
                printf("  - tx_return_err = %u\n", hal_spi_stats.tx_return_err);
                printf("  - spi_tx_done_handler = %lu\n", hal_spi_stats.spi_tx_done_handler);
              }
              #endif
  96          
  97          void ihal_ui_cmd_process (char* CmdBuf)
  98          {    
  99   1          u8  cmd[10];
 100   1      
 101   1        if (sscanf(CmdBuf+1, "%s", &cmd) < 1 || strcmp(cmd,"") == 0)
 102   1        {
 103   2            printf("SPI Test Commands:\n");
 104   2          printf("i txTest - Data transmit test\n");
 105   2              printf("i rxTest - Data receving test\n");
 106   2      #ifdef SPI_DEBUG
                      printf("i stat   - Statistics\n");
                      printf("i rststat- Reset Statistics\n");
              #endif
C51 COMPILER V9.52.0.0   IHAL_UI                                                           01/10/2015 21:25:26 PAGE 3   

 110   2          return;   
 111   2        }
 112   1             
 113   1        if (strcmp(cmd, "txTest") == 0) {
 114   2          ihal_ui_tx_menu();
 115   2        } else if (strcmp(cmd, "rxTest") == 0) {
 116   2          ihal_ui_rx_menu();
 117   2        }
 118   1      #ifdef SPI_DEBUG
                else if (strcmp(cmd, "stat") == 0) {
                  ihal_ui_stat_menu();
                }
                else if (strcmp(cmd, "rststat") == 0) {
                    hal_spi_clear_stats();
                }
                  else if (strcmp(cmd, "debug") == 0)
                  {
                      // toggle the debug flag
                      mySpiDebugFlag = !mySpiDebugFlag;
                      printf("\n SPI Debug flag is %s\n", mySpiDebugFlag ? "ON":"OFF");
                }
              #endif
 132   1      } 
 133          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    411    ----
   CONSTANT SIZE    =    222    ----
   XDATA SIZE       =   ----      40
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
